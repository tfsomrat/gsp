<!-- /snippets/collection-sorting.liquid -->
<div class="col-12 col-sm-12 text-center col-md-6 d-flex align-items-center sort-by-title mb-2 mb-md-0" >
    {%- if paginate.page_size > 12 -%}
        {%- assign pagepag = paginate.page_size -%}
    {%- else -%}
        {%- assign pagepag = collection.all_products_count -%}
    {%- endif -%}

    {% if collection.products.size > 0 %}
    <p>Showing {{ paginate.current_offset | plus: 1 }}-{% if paginate.next %}{{ paginate.current_offset | plus: paginate.page_size }}{% else %}{{ paginate.items }}{% endif %} of {{ paginate.items }} products</p>
    {% else %}
    <p>Showing 0 products</p>
    {% endif %}
    <!-- <p>Showing <strong>{{ pagepag }}</strong> of <strong>{{collection.all_products_count}}</strong> products in <strong>{{collection.title}}</strong></p> -->
</div>
<div class="d-none d-md-block col-md-6 sort-by-options" >
    {% include 'sort-by-options' %}
</div>
<!-- collection-sort-bar -->


<script defer='defer'>
  /*
    $(document).ready(function(){
      var productCount = 0;
      $('.product-item').each(function(){
        productCount = productCount + 1;
      });
      $('#currentPageProducts').text(productCount);
    });
  */

  /*============================================================================
    Inline JS because collection liquid object is only available
    on collection pages and not external JS files
  ==============================================================================*/
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
    $(function() {
      $('.SortBy').val('{{ collection.sort_by | default: collection.default_sort_by }}').change(function() {
          console.log('sortBy');
          Shopify.queryParams.sort_by = jQuery(this).val();
          location.search = jQuery.param(Shopify.queryParams);
        }
      );
    });

  function narrowBy(){
    /* Product Tag Filters - Good for any number of filters on any type of collection pages */
    var collFilters = jQuery('.narrowBy');
    collFilters.change(function() {
      var newTags = [];
      collFilters.each(function() {
        if (jQuery(this).val()) {
          newTags.push(jQuery(this).val());
        }
      });
      if (newTags.length) {
        var query = newTags.join('+');
        window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('/' + 'tag', '/' + query);
      }
      else {
        {% if collection.handle %}
        window.location.href = '/collections/{{ collection.handle }}';
        {% elsif collection.products.first.type == collection.title %}
        window.location.href = '{{ collection.title | url_for_type }}';
        {% elsif collection.products.first.vendor == collection.title %}
        window.location.href = '{{ collection.title | url_for_vendor }}';
        {% endif %}
      }
    });
  }
  window.onload = narrowBy;
</script>
