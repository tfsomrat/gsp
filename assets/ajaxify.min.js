/*==============================================================================
 ___  _   _    _
/   || | | |  | |
\__  | | | |  | |  __
/    |/  |/_) |/  /  \_/\/
\___/|__/| \_/|__/\__/  /\_/
              |\
              |/
Ajaxify v1.0
https://github.com/Elkfox/Ajaxify
Copyright (c) 2017 Elkfox Co Pty Ltd
https://elkfox.com
Project lead: George Butter
MIT License
==============================================================================*/

ajaxify = function(settings) {
    settings = settings || {}
    // Change the default selectors here
    var linkParent = settings.linkParent || '.pagination' // Class of pagination container
    var parentContainer = settings.parentContainer || '#MainContent' // All of the content selector used to detect scroll bottom distance
    var endlessScrollContainer = settings.endlessScrollContainer || '.EndlessScroll' // Selector for endless scroll pages
    var endlessClickContainer = settings.endlessClickContainer || '.EndlessClick' // Class of pagination container
    var endlessOffset = settings.endlessOffset || 0 // Offset the distance from the bottom of the page
    var ajaxinateContainer = settings.ajaxinateContainer || '.Ajaxinate' // ID Selector for ajax pagination pages
    var ajaxinateLink = settings.ajaxinateLink || '.page a' // Class Selector for ajax pagination links
    var fade = settings.fade || 'fast' // fade speed
    var textChange = settings.textChange || 'Loading' // Text whilst loading content

    var linkElem;
    var contentContainer;
    var pageNumber;
    var pageType;
    var action;
    var moreURL;



    function resizeElements() {
        setTimeout(function(){
            console.log("this");
            $('.collection__list-item-image').matchHeight({ byRow: true });
            $('.collection__list-item h3').matchHeight({ byRow: true });
            $('.boost-pfs-filter-product-item-title').matchHeight({ byRow: true });
            $('.shop-by-block figure').matchHeight({ byRow: true });

            /**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
Shopify.AjaxifyCart = (function($) {

    // Some configuration options.
    // I have separated what you will never need to change from what
    // you might change.

    var _config = {

      // What you might want to change
      addToCartBtnLabel:             'Add to cart',
      addedToCartBtnLabel:           'Thank you!',
      addingToCartBtnLabel:          'Adding...',
      soldOutBtnLabel:               'Sold Out',
      howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
      cartCountSelector:             '.item_count',
      cartTotalSelector:             '#cart-price',
      // 'aboveForm' for top of add to cart form,
      // 'belowForm' for below the add to cart form, and
      // 'nextButton' for next to add to cart button.
      feedbackPosition:              'nextButton',

      // What you will never need to change
      addToCartBtnSelector:          '[type="submit"]',
      addToCartFormSelector:         'form[action="/cart/add"]',
      shopifyAjaxAddURL:             '/cart/add.js',
      shopifyAjaxCartURL:            '/cart.js'
    };

    // We need some feedback when adding an item to the cart.
    // Here it is.
    var _showFeedback = function(success, html, $addToCartForm) {
      $('.ajaxified-cart-feedback').remove();
      var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
      switch (_config.feedbackPosition) {
        case 'aboveForm':
          $addToCartForm.before(feedback);
          break;
        case 'belowForm':
          $addToCartForm.after(feedback);
          break;
        case 'nextButton':
        default:
          $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
          break;
      }


      // If you use animate.css
      // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
      $('.ajaxified-cart-feedback').slideDown();
    };
    var _setText = function($button, label) {
      if ($button.children().length) {
        $button.children().each(function() {
          if ($.trim($(this).text()) !== '') {
            $(this).text(label);
          }
        });
      }
      else {
        $button.val(label).text(label);
      }
    };
    var _init = function() {
      $(document).ready(function() {
        $(_config.addToCartFormSelector).submit(function(e) {
          e.preventDefault();
          var $addToCartForm = $(this);
          var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
          _setText($addToCartBtn, _config.addingToCartBtnLabel);
          $addToCartBtn.addClass('disabled').prop('disabled', true);
          // Add to cart.
          $.ajax({
            url: _config.shopifyAjaxAddURL,
            dataType: 'json',
            type: 'post',
            data: $addToCartForm.serialize(),
            success: function(itemData) {
              // Re-enable add to cart button.
              $addToCartBtn.addClass('inverted');
              _setText($addToCartBtn, _config.addedToCartBtnLabel);
              _showFeedback('success','<i class="fa fa-check"></i> Added to Basket! <a href="/cart">View Basket</a> or <a href="/collections/all">continue shopping</a>.',$addToCartForm);
              window.setTimeout(function(){
                $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
                _setText($addToCartBtn,_config.addToCartBtnLabel);
              }, _config.howLongTillBtnReturnsToNormal);
              // Update cart count and show cart link.
              $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
                if (_config.cartCountSelector && $(_config.cartCountSelector).size()) {
                  var value = $(_config.cartCountSelector).html() || '0';
                  
                var has_collect = false;
                for (let i = 0; i < cart.items.length; i++) {
                  const element = cart.items[i];
                  if (element.title == 'Click & Collect') {
                    has_collect = true;
                  }
                }
                if (has_collect == true) {
                  var cart_amount = cart.item_count - 1;
                } else {
                  var cart_amount = cart.item_count;
                }
                  $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart_amount)).removeClass('hidden-count');
                }
                if (_config.cartTotalSelector && $(_config.cartTotalSelector).size()) {
                  if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                    var newCurrency = '';
                    if (newCurrency) {
                      $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                    }
                    else {
                      $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money }}"));
                    }
                  }
                  else {
                      console.log('c');
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money }}").replace('$', 'Â£'));
                  }
                };
              });
            },
            error: function(XMLHttpRequest) {
              var response = eval('(' + XMLHttpRequest.responseText + ')');
              response = response.description;
              if (response.slice(0,4) === 'All ') {
                _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                $addToCartBtn.prop('disabled', false);
                _setText($addToCartBtn, _config.soldOutBtnLabel);
                $addToCartBtn.prop('disabled',true);
              }
              else {
                _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
                $addToCartBtn.prop('disabled', false).removeClass('disabled');
                _setText($addToCartBtn, _config.addToCartBtnLabel);
              }
            }
          });
          return false;
        });
      });
    };
    return {
      init: function(params) {
          // Configuration
          params = params || {};
          // Merging with defaults.
          $.extend(_config, params);
          // Action
          $(function() {
            _init();
          });
      },
      getConfig: function() {
        return _config;
      }
    }
  })(jQuery);

  Shopify.AjaxifyCart.init();

        }, 1000);

    }

    $.loadMore = function() {
      if (moreURL.length){
        $.ajax({
          type: 'GET',
          dataType: 'html',
          url: moreURL,
          success: function(data) {
            if (pageType == 'ajax') {
              $(ajaxinateContainer).not('[data-page="'+pageNumber+'"]').hide();
              history.pushState({}, pageNumber, moreURL);
            } else {
              $(linkElem).fadeOut(fade);
            }
            var filteredData = $(data).find(contentContainer);
            $(filteredData).appendTo( $(contentContainer).parent() ).hide().fadeIn(fade);
            if (pageType == 'endlessScroll') {
              $.endlessScroll();
            } else if (pageType == 'ajax') {
              $.ajaxinationClick();
            } else if (pageType == 'endlessClick') {
              $.endlessClick();
            }
          }
        });
      }
        $(window).scroll(function(){
            var winTop = $(window).scrollTop();
            if(winTop >= 200){
              $("body").addClass("sticky-header");
            }else{
              $("body").removeClass("sticky-header");
            }//if-else
          });//win func.

          $(".count6").mouseenter(function(){
              $('.navigation-hover-overlay').addClass('open');
          });

          $(".count6").mouseleave(function(){
              $('.navigation-hover-overlay').removeClass('open');
          });
        }

    // Check whether the page is at the bottom
    $.endlessScroll = function() {
      action = 'scroll load resize';
      $(window).on( action, function() {
        contentContainer = endlessScrollContainer;
        moreURL = $(contentContainer+':last-of-type '+linkElem).attr('href');
        pageType = 'endlessScroll';
        $(linkElem).text(textChange);
        if ($(contentContainer+':last-of-type '+linkElem).length){
          var bottom = $( parentContainer ).outerHeight();
          var docTop = ($(document).scrollTop() + $(window).height() + endlessOffset);
          if( docTop > bottom ) {
            $(window).off(action);
              $.loadMore();
              resizeElements();
          }
        }
      });
    }

    //Endless click function
    $.endlessClick = function() {
      $(linkElem).on( 'click', function(e) {
        e.preventDefault();
        action = 'click';
        contentContainer = endlessClickContainer;
        moreURL = $(this).attr('href');
        pageType = 'endlessClick';
        $(linkElem).text(textChange);
        $(linkElem).off(action);
        $.loadMore();
        resizeElements();
      });
    }

    //Ajaxination click function
    $.ajaxinationClick = function() {
      $(linkElem).on( 'click', function(e) {
        e.preventDefault();
        action = 'click';
        contentContainer = ajaxinateContainer;
        moreURL = $(this).attr('href');
        pageNumber = $(this).attr('data-number');
        pageType = 'ajax';
        if( $(contentContainer+'[data-page="'+pageNumber+'"]').length ) {
          $(contentContainer).not('[data-page="'+pageNumber+'"]').hide();
          $(contentContainer+'[data-page="'+pageNumber+'"]').fadeIn(fade);
          history.pushState({}, pageNumber, moreURL);
        } else {
          $(linkElem).off(action);
          $.loadMore();
          resizeElements();
        }
        $('html, body').animate({ scrollTop: $(parentContainer).offset().top }, 300 );
      });
    }

    // Detect whether the pagination types exist
      // Endless Click Initialize
    if ( $( endlessClickContainer ).length ) {
      linkElem = linkParent+' a';
      $.endlessClick();
      resizeElements();
    }
      // Ajaxination Click Initialize
    if ( $( ajaxinateContainer ).length ) {
      linkElem = ajaxinateLink;
      $.ajaxinationClick();
      resizeElements();
    }
      // Endless Scroll Initialize
    if ( $( endlessScrollContainer ).length ) {
      linkElem = linkParent+' a';
      $.endlessScroll();
      resizeElements();

    }

  }
